import{a as b,W as x,c,e as g,d as m}from"./Wif-c52e7263.js";import{W as _}from"./WebhookWorker-81e5bc35.js";import"./index-e26bbf42.js";import"./empty-b0006653.js";class S extends b{constructor(a){super(a),this.seenStatuses=[],Object.assign(this,a)}async stop(){await this.wallet.provider.unsubscribeFromAddress(this.cashaddr,this.callback)}async start(){const a=async i=>{let e="";if(typeof i=="string"){if(e=i,this.status==="")return}else if(i instanceof Array){if(e=i[1],i[0]!==this.cashaddr)return}else return;e!=this.status&&this.seenStatuses.indexOf(e)===-1&&(this.seenStatuses.push(e),await this.handler(e))};this.callback=a,this.wallet=await x.fromCashaddr(this.cashaddr),await this.wallet.provider.subscribeToAddress(this.cashaddr,this.callback)}async handler(a){const i=await this.wallet.provider.getHistory(this.cashaddr);let e=[];if(a==="")e=i.slice(-1);else{const h=i.reverse();this.tx_seen=this.tx_seen.map(t=>{if(t.height<=0){const n=h.find(o=>o.tx_hash===t.tx_hash);n&&(t.height=n.height)}return t});const s=this.tx_seen.map(t=>t.tx_hash);e=i.filter(t=>(t.height>=this.last_height||t.height<=0)&&!s.includes(t.tx_hash))}let l=!0;for(const h of e){let s=!1;if(this.type.indexOf("transaction:")>=0){const t=await this.wallet.provider.getRawTransactionObject(h.tx_hash),n=await Promise.all(t.vin.map(r=>this.wallet.provider.getRawTransactionObject(r.txid))),o=t.vout.some(r=>r.scriptPubKey.addresses.includes(this.cashaddr)),d=n.some(r=>r.vout.some(w=>w.scriptPubKey.addresses.includes(this.cashaddr))),p=this.type.indexOf("in")>=0,f=this.type.indexOf("out")>=0,u=d&&o?c.transactionInOut:d?c.transactionOut:c.transactionIn;if(p&&o)s=await this.post({direction:u,data:t});else if(f&&d)s=await this.post({direction:u,data:t});else continue}else if(this.type===c.balance){const t=await this.wallet.provider.getBalance(this.cashaddr),n=await g(t);s=await this.post(n)}s?(this.tx_seen.push(h),await this.db.setWebhookSeenTxLastHeight(this.id,this.tx_seen,this.last_height)):l=!1}if(l){if(this.recurrence===m.once){await(await _.instance()).stopHook(this),await this.destroy();return}this.status=a,await this.db.setWebhookStatus(this.id,a);const h=Math.max(...this.tx_seen.map(s=>s.height));h>=this.last_height&&(this.last_height=h,this.tx_seen=this.tx_seen.filter(s=>s.height===h||s.height<=0),await this.db.setWebhookSeenTxLastHeight(this.id,this.tx_seen,this.last_height))}}}export{S as WebhookBch};
