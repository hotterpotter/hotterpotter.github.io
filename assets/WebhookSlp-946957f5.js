import{a as o,b as l,W as c,c as e,d}from"./Wif-c52e7263.js";import{W as h}from"./WebhookWorker-81e5bc35.js";import"./index-e26bbf42.js";import"./empty-b0006653.js";class b extends o{constructor(t){super(t),Object.assign(this,t),this.cashaddr=l.toSlpAddress(this.cashaddr)}async start(){const t=async s=>{let a=!1;"_id"in s.details?a=await this.slpDbHandler(s):a=await this.gsppHandler(s),a&&this.recurrence===d.once&&(await(await h.instance()).stopHook(this),await this.destroy())};this.callback=t,this.wallet=await c.fromSlpaddr(this.cashaddr),this.cancelFn=this.wallet.slp.watchTransactions(t,this.tokenId)}async slpDbHandler(t){let s=!1;const a=this.type,n=t.details;if(this.type===e.slpTransactionInOut)s=await this.post({direction:a,data:t});else if(this.type===e.slpTransactionIn&&n.out.findIndex(i=>i.e.a===this.cashaddr)>-1)s=await this.post({direction:a,data:t});else if(this.type===e.slpTransactionOut&&n.in.findIndex(i=>i.e.a===this.cashaddr)>-1)s=await this.post({direction:a,data:t});else if(this.type===e.slpBalance){const i=this.wallet.slp.getBalance(this.tokenId);s=await this.post({direction:a,data:i})}return s}async gsppHandler(t){let s=!1;const a=this.type,n=t.details;if(this.type===e.slpTransactionInOut)s=await this.post({direction:a,data:t});else if(this.type===e.slpTransactionIn&&n.outputs.findIndex(i=>i===this.cashaddr)>-1)s=await this.post({direction:a,data:t});else if(this.type===e.slpTransactionOut&&n.inputs.findIndex(i=>i===this.cashaddr)>-1)s=await this.post({direction:a,data:t});else if(this.type===e.slpBalance){const i=this.wallet.slp.getBalance(this.tokenId);s=await this.post({direction:a,data:i})}return s}async stop(){await this.cancelFn()}}export{b as WebhookSlp};
